{"version":3,"sources":["components/small/Button/constants.js","components/small/Button/index.js","components/small/Backdrop/constants.js","components/small/Backdrop/index.js","components/medium/Menu/index.js","components/medium/AppControls/index.js","components/organisms/TopBar/index.js","components/organisms/AppDrawer/index.js","components/small/Bar/index.js","components/organisms/SortChart/index.js","components/medium/VisualizerControls/index.js","components/medium/ProgressBar/index.js","components/medium/ColorKey/index.js","components/medium/SortInfo/index.js","components/organisms/SortVisualizer/index.js","components/medium/Footer/index.js","algorithms/helpers.js","algorithms/BubbleSort.js","algorithms/SelectionSort.js","algorithms/InsertionSort.js","algorithms/MergeSort.js","algorithms/QuickSort.js","App.js","index.js"],"names":["CSS_CLASSES","renderIcon","icon","iconClass","ICON","className","Button","raised","unelevated","outlined","dense","notCased","disabled","href","onClick","children","classNames","rootClass","ClassMappings","userClassName","Object","keys","forEach","buildClassNames","Backdrop","show","opaque","dark","undefined","MenuList","open","items","onSelect","map","item","i","key","evt","Menu","state","props","close","preventDefault","setState","toggle","prevState","this","selected","placeholder","noDropIcon","AngleUp","AngleDown","Component","AppControls","algorithm","onAlgorithmChange","onGenerateRandomArray","arraySize","onArraySizeChange","String","TopBar","drawerOpen","toggleDrawer","Close","Hamburger","AppDrawer","closeDrawer","Bar","width","height","val","stateA","stateB","stateC","stateD","sorted","style","BarStyle","SortChart","numbers","maxNum","groupA","groupB","groupC","groupD","sortedIndices","num","length","includes","margin","marginRight","getListOfBars","isDisabled","action","VisualizerControls","onPlay","onPause","onBackward","onForward","onRepeat","onAdjustSpeed","playing","playDisabled","pauseDisabled","backwardDisabled","forwardDisabled","repeatDisabled","playbackSpeed","Repeat","Backward","Pause","Play","Forward","ProgressBar","ColorKey","keySorted","keyA","keyB","keyC","keyD","SortInfo","title","description","worstCase","avgCase","bestCase","space","SortVisualizer","trace","traceStep","originalArray","array","timeoutIds","_reset","clearTimeouts","timeoutId","clearTimeout","_changeVisualState","visualState","run","timer","setTimeout","push","pause","continue","slice","stepForward","step","stepBackward","repeat","comparing","compared","adjustPlaybackSpeed","speed","Number","split","prevProps","Math","max","bind","colorKey","desc","Footer","target","rel","newTrace","addToTrace","lastSorted","swap","j","tmp","createRange","start","end","Array","elem","createKey","BubbleSortKey","BubbleSortDesc","BubbleSort","nums","SelectionSortKey","SelectionSortDesc","SelectionSort","minIndex","InsertionSortKey","InsertionSortDesc","InsertionSort","value","hole","MergeSortKey","MergeSortDesc","MergeSort","recursiveMergeSort","original","midPoint","floor","mid","left","right","k","merge","QuickSortKey","QuickSortDesc","QuickSort","recursiveQuickSort","pivot","random","choosePivot","partition","App","appDrawerOpen","ALGORITHM","ALGORITHM_KEY","ALGORITHM_DESC","generateRandomArray","fill","createTrace","handleAlgorithmChange","handleArraySizeChange","size","sort","toggleAppDrawer","theme","controls","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81bef0fd.chunk.js","sourcesContent":["export const CSS_CLASSES = {\r\n  ROOT: 'Button',\r\n  ICON: 'Button__Icon',\r\n  LABEL: 'Button__Label',\r\n  DENSE: 'Button_dense',\r\n  RAISED: 'Button_raised',\r\n  OUTLINED: 'Button_outlined',\r\n  UNELEVATED: 'Button_unelevated',\r\n  UPPERCASE: 'Button_uppercase'\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport { CSS_CLASSES } from './constants';\r\n\r\nfunction buildClassNames(rootClass, ClassMappings, userClassName) {\r\n  let classNames = `${rootClass}`;\r\n  Object.keys(ClassMappings).forEach((className) => {\r\n    if (ClassMappings[className]) {\r\n      classNames += ` ${className}`;\r\n    }\r\n  });\r\n  classNames += ` ${userClassName}`;\r\n  return classNames;\r\n}\r\n\r\nfunction renderIcon(icon, iconClass) {\r\n  const ICON = icon;\r\n  return <ICON className={`${CSS_CLASSES.ICON} ${iconClass}`} />;\r\n}\r\n\r\nconst Button = ({\r\n  className,\r\n  raised,\r\n  unelevated,\r\n  outlined,\r\n  dense,\r\n  notCased,\r\n  disabled,\r\n  icon,\r\n  iconClass,\r\n  href,\r\n  onClick,\r\n  children\r\n}) => {\r\n  const classNames = buildClassNames(\r\n    CSS_CLASSES.ROOT,\r\n    {\r\n      [CSS_CLASSES.DENSE]: dense,\r\n      [CSS_CLASSES.RAISED]: raised,\r\n      [CSS_CLASSES.OUTLINED]: outlined,\r\n      [CSS_CLASSES.UNELEVATED]: unelevated,\r\n      [CSS_CLASSES.UPPERCASE]: !notCased\r\n    },\r\n    className\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <a href={href} className={classNames} disabled={disabled}>\r\n        {icon ? renderIcon(icon, iconClass) : null}\r\n        <span className=\"Button__Label\">{children}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={classNames}\r\n      disabled={disabled}\r\n    >\r\n      {icon ? renderIcon(icon, iconClass) : null}\r\n      <span className=\"Button__Label\">{children}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  raised: PropTypes.bool,\r\n  unelevated: PropTypes.bool,\r\n  outlined: PropTypes.bool,\r\n  dense: PropTypes.bool,\r\n  notCased: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  href: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\r\n};\r\n\r\nexport default Button;\r\n","export const CSS_CLASSES = {\r\n  ROOT: 'Backdrop',\r\n  OPAQUE: 'Backdrop_opaque',\r\n  DARK: 'Backdrop_dark',\r\n  CLICKABLE: 'Backdrop_clickable'\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport { CSS_CLASSES } from './constants';\r\n\r\nfunction buildClassNames(rootClass, ClassMappings, userClassName) {\r\n  let classNames = `${rootClass}`;\r\n  Object.keys(ClassMappings).forEach((className) => {\r\n    if (ClassMappings[className]) {\r\n      classNames += ` ${className}`;\r\n    }\r\n  });\r\n  classNames += ` ${userClassName}`;\r\n  return classNames;\r\n}\r\n\r\nconst Backdrop = ({ show, opaque, dark, className, onClick }) => {\r\n  const classNames = buildClassNames(\r\n    CSS_CLASSES.ROOT,\r\n    {\r\n      [CSS_CLASSES.OPAQUE]: opaque,\r\n      [CSS_CLASSES.DARK]: dark,\r\n      [CSS_CLASSES.CLICKABLE]: onClick !== undefined\r\n    },\r\n    className\r\n  );\r\n\r\n  return show ? <div className={classNames} onClick={onClick} /> : null;\r\n};\r\n\r\nBackdrop.propTypes = {\r\n  show: PropTypes.bool,\r\n  opaque: PropTypes.bool,\r\n  dark: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\nexport default Backdrop;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport Backdrop from '../../small/Backdrop';\r\nimport {\r\n  MdExpandMore as AngleDown,\r\n  MdExpandLess as AngleUp\r\n} from 'react-icons/md';\r\nimport Button from '../../small/Button';\r\n\r\nconst MenuList = ({ open, items, onSelect }) => {\r\n  return open ? (\r\n\r\n    \r\n    <ul className=\"Menu__List\">\r\n      {items.map((item, i) => (\r\n        <li\r\n          key={`${item}_${i}`}\r\n          onClick={(evt) => {\r\n            onSelect(evt, item);\r\n          }}\r\n          className=\"Menu__Item\"\r\n        >\r\n          {item}\r\n        </li>\r\n        \r\n      ))}\r\n    </ul>\r\n  ) : null;\r\n};\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    open: this.props.open || false\r\n  };\r\n\r\n  close = (evt) => {\r\n    evt.preventDefault();\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  toggle = (evt) => {\r\n    evt.preventDefault();\r\n    this.setState((prevState) => ({ open: !prevState.open }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      selected,\r\n      onSelect,\r\n      placeholder,\r\n      items,\r\n      noDropIcon\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Backdrop show={this.state.open} onClick={this.close} />\r\n        <div className={`Menu ${className}`}>\r\n          <header className=\"Menu__Header\">\r\n            {noDropIcon ? (\r\n              <Button\r\n                onClick={this.toggle}\r\n                notCased\r\n                className={selected ? null : 'Menu__Placeholder'}\r\n              >\r\n                {selected ? selected : placeholder}\r\n              </Button>\r\n            ) : (\r\n              <div\r\n                className={\r\n                  selected ? 'Menu__SelectedItem' : 'Menu__Placeholder'\r\n                }\r\n              >\r\n                {selected ? selected : placeholder}\r\n              </div>\r\n            )}\r\n            {noDropIcon ? null : (\r\n              <Button\r\n                icon={this.state.open ? AngleUp : AngleDown}\r\n                onClick={this.toggle}\r\n              />\r\n            )}\r\n          </header>\r\n          <MenuList\r\n            open={this.state.open}\r\n            items={items}\r\n            onSelect={(evt, item) => {\r\n              onSelect(item);\r\n              this.close(evt);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  className: PropTypes.string,\r\n  selected: PropTypes.string,\r\n  onSelect: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.string),\r\n  noDropIcon: PropTypes.bool\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Button from '../../small/Button';\r\nimport Menu from '../Menu';\r\n\r\nconst AppControls = ({\r\n  algorithm,\r\n  onAlgorithmChange,\r\n  onGenerateRandomArray,\r\n  arraySize,\r\n  onArraySizeChange\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Menu\r\n        placeholder=\"Select Sort Algorithm\"\r\n        items={[\r\n          'Bubble Sort',\r\n          'Selection Sort',\r\n          'Insertion Sort',\r\n          'Merge Sort',\r\n          'Quick Sort'\r\n        ]}\r\n        selected={algorithm}\r\n        onSelect={onAlgorithmChange}\r\n      />\r\n\r\n      <div className=\"AppControls__Size\">\r\n        <span>Size</span>\r\n        <Menu\r\n          placeholder=\"Array Size\"\r\n          items={['5', '10', '25', '50', '75', '100']}\r\n          selected={String(arraySize)}\r\n          onSelect={onArraySizeChange}\r\n        />\r\n      </div>\r\n\r\n      <Button onClick={onGenerateRandomArray}>Randomize</Button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAppControls.propTypes = {\r\n  algorithm: PropTypes.string,\r\n  onAlgorithmChange: PropTypes.func.isRequired,\r\n  onGenerateRandomArray: PropTypes.func.isRequired,\r\n  arraySize: PropTypes.number,\r\n  onArraySizeChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AppControls;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nimport Button from '../../small/Button';\r\nimport { MdMenu as Hamburger, MdClose as Close } from 'react-icons/md';\r\n\r\nconst TopBar = ({ drawerOpen, toggleDrawer, children }) => {\r\n  return (\r\n    <header className=\"TopBar\">\r\n      <div className=\"TopBar__Row\">\r\n        <section className=\"TopBar__Section\">\r\n          <Button\r\n            icon={drawerOpen ? Close : Hamburger}\r\n            className=\"TopBar__MenuButton\"\r\n            iconClass=\"TopBar__Icon\"\r\n            onClick={toggleDrawer}\r\n          />\r\n          <span className=\"TopBar__Title\">Sorting Algorithms</span>\r\n        </section>\r\n        <section className=\"TopBar__Section TopBar__Section_align_end\">\r\n          {children}\r\n        </section>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { Fragment } from 'react';\r\nimport './style.css';\r\n\r\nimport Backdrop from '../../small/Backdrop';\r\n\r\nconst AppDrawer = ({ open, children, closeDrawer }) => {\r\n  let className = 'AppDrawer';\r\n  className += open ? ` AppDrawer_open` : ` AppDrawer_closed`;\r\n  return (\r\n    <Fragment>\r\n      <div className={className}>\r\n        <div className=\"AppDrawer__Content\">{children}</div>\r\n      </div>\r\n      <Backdrop show={open} onClick={closeDrawer} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Bar = ({\r\n  width,\r\n  height,\r\n  val,\r\n  stateA,\r\n  stateB,\r\n  stateC,\r\n  stateD,\r\n  sorted,\r\n  style\r\n}) => {\r\n  let classNames = 'Bar';\r\n  if (sorted) classNames += ' Bar_sorted';\r\n  if (stateD) classNames += ' Bar_stateD';\r\n  else if (stateC) classNames += ' Bar_stateC';\r\n  else if (stateB) classNames += ' Bar_stateB';\r\n  else if (stateA) classNames += ' Bar_stateA';\r\n\r\n  let BarStyle = { ...style, width: `${width}%`, height: `${height}%` };\r\n  if (stateA || stateB || stateC || stateD) {\r\n    BarStyle['marginRight'] = `${0.3 * width}%`;\r\n    BarStyle['marginLeft'] = `${0.3 * width}% `;\r\n  }\r\n\r\n  return (\r\n    <div style={BarStyle} className={classNames}>\r\n      <span className=\"Bar__Text\">{val}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Bar from '../../small/Bar';\r\n\r\nconst getListOfBars = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices\r\n) => {\r\n  return numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n    let margin =\r\n      i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\r\n    return (\r\n      <Bar\r\n        key={`${i}_${num}`}\r\n        width={width}\r\n        height={height}\r\n        val={width > 4 ? num : null}\r\n        stateA={stateA}\r\n        stateB={stateB}\r\n        stateC={stateC}\r\n        stateD={stateD}\r\n        sorted={sorted}\r\n        style={{ marginRight: `${margin}` }}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nconst SortChart = ({\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices\r\n}) => {\r\n  return (\r\n    <div className=\"SortChart\">\r\n      {getListOfBars(\r\n        numbers,\r\n        maxNum,\r\n        groupA,\r\n        groupB,\r\n        groupC,\r\n        groupD,\r\n        sortedIndices\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSortChart.propTypes = {\r\n  numbers: PropTypes.arrayOf(PropTypes.number),\r\n  maxNum: PropTypes.number,\r\n  groupA: PropTypes.arrayOf(PropTypes.number),\r\n  groupB: PropTypes.arrayOf(PropTypes.number),\r\n  groupC: PropTypes.arrayOf(PropTypes.number),\r\n  groupD: PropTypes.arrayOf(PropTypes.number),\r\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\r\n};\r\n\r\nexport default SortChart;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../../small/Button';\r\nimport {\r\n  MdPlayArrow as Play,\r\n  MdPause as Pause,\r\n  MdSkipNext as Forward,\r\n  MdSkipPrevious as Backward,\r\n  MdRepeat as Repeat\r\n} from 'react-icons/md';\r\nimport Menu from '../Menu';\r\n\r\n// Helper function\r\nfunction isDisabled(action, disabled = false) {\r\n  return action === undefined || disabled;\r\n}\r\n\r\nconst VisualizerControls = ({\r\n  // Actions\r\n  onPlay,\r\n  onPause,\r\n  onBackward,\r\n  onForward,\r\n  onRepeat,\r\n  onAdjustSpeed,\r\n\r\n  // States\r\n  playing,\r\n  playDisabled,\r\n  pauseDisabled,\r\n  backwardDisabled,\r\n  forwardDisabled,\r\n  repeatDisabled,\r\n  playbackSpeed\r\n}) => {\r\n  return (\r\n    <div className=\"VisualizerControls\">\r\n      {/* Repeat */}\r\n      <Button\r\n        icon={Repeat}\r\n        onClick={onRepeat}\r\n        disabled={isDisabled(onRepeat, repeatDisabled)}\r\n        className=\"VisualizerControls__Button\"\r\n      />\r\n\r\n      {/* Backward Button  */}\r\n      <Button\r\n        icon={Backward}\r\n        onClick={onBackward}\r\n        disabled={isDisabled(onBackward, backwardDisabled)}\r\n        iconClass=\"VisualizerControls__Icon\"\r\n        className=\"VisualizerControls__Button\"\r\n      />\r\n\r\n      {/* Play or Pause button - context dependent */}\r\n      <Button\r\n        icon={playing ? Pause : Play}\r\n        onClick={playing ? onPause : onPlay}\r\n        disabled={\r\n          playing\r\n            ? isDisabled(onPause, pauseDisabled)\r\n            : isDisabled(onPlay, playDisabled)\r\n        }\r\n        raised\r\n        iconClass=\"VisualizerControls__Icon\"\r\n        className=\"VisualizerControls__CenterButton\"\r\n      />\r\n\r\n      {/* Forward Button  */}\r\n      <Button\r\n        icon={Forward}\r\n        onClick={onForward}\r\n        disabled={isDisabled(onForward, forwardDisabled)}\r\n        iconClass=\"VisualizerControls__Icon\"\r\n        className=\"VisualizerControls__Button\"\r\n      />\r\n\r\n      {/* Playback Speed */}\r\n      <Menu\r\n        items={['0.25x', '0.5x', '1x', '2x', '4x']}\r\n        placeholder=\"Speed\"\r\n        selected={`${playbackSpeed}x`}\r\n        onSelect={onAdjustSpeed}\r\n        noDropIcon\r\n        className=\"VisualizerControls__SpeedButton\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nVisualizerControls.propTypes = {\r\n  onPlay: PropTypes.func,\r\n  onPause: PropTypes.func,\r\n  onBackward: PropTypes.func,\r\n  onForward: PropTypes.func,\r\n  onRepeat: PropTypes.func,\r\n  onAdjustSpeed: PropTypes.func,\r\n\r\n  playing: PropTypes.bool,\r\n  playDisabled: PropTypes.bool,\r\n  pauseDisabled: PropTypes.bool,\r\n  backwardDisabled: PropTypes.bool,\r\n  forwardDisabled: PropTypes.bool,\r\n  repeatDisabled: PropTypes.bool,\r\n  playbackSpeed: PropTypes.number\r\n};\r\n\r\nexport default VisualizerControls;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ProgressBar = ({ width }) => (\r\n  <div className=\"ProgressBar\">\r\n    <div\r\n      className=\"ProgressBar__Active\"\r\n      style={{\r\n        width: `${width}%`\r\n      }}\r\n    ></div>\r\n  </div>\r\n);\r\n\r\nProgressBar.propTypes = {\r\n  width: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ColorKey = ({ groupA, groupB, groupC, groupD }) => {\r\n  const keySorted =\r\n    groupA || groupB || groupC || groupD ? (\r\n      <div className=\"ColorKey__Item\">\r\n        <div className=\"ColorKey__Box ColorKey__Sorted\"></div>\r\n        <span>Sorted</span>\r\n      </div>\r\n    ) : (\r\n      <div className=\"ColorKey__Item\">\r\n        <div className=\"ColorKey__Box ColorKey__Unsorted\"></div>\r\n        <span>Unsorted</span>\r\n      </div>\r\n    );\r\n\r\n  const keyA = groupA ? (\r\n    <div className=\"ColorKey__Item\">\r\n      <div className=\"ColorKey__Box ColorKey__GroupA\"></div>\r\n      <span>{groupA}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  const keyB = groupB ? (\r\n    <div className=\"ColorKey__Item\">\r\n      <div className=\"ColorKey__Box ColorKey__GroupB\"></div>\r\n      <span>{groupB}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  const keyC = groupC ? (\r\n    <div className=\"ColorKey__Item\">\r\n      <div className=\"ColorKey__Box ColorKey__GroupC\"></div>\r\n      <span>{groupC}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  const keyD = groupD ? (\r\n    <div className=\"ColorKey__Item\">\r\n      <div className=\"ColorKey__Box ColorKey__GroupD\"></div>\r\n      <span>{groupD}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"ColorKey\">\r\n      {keySorted}\r\n      {keyA}\r\n      {keyB}\r\n      {keyC}\r\n      {keyD}\r\n    </div>\r\n  );\r\n};\r\n\r\nColorKey.propTypes = {\r\n  groupA: PropTypes.string,\r\n  groupB: PropTypes.string,\r\n  groupC: PropTypes.string,\r\n  groupD: PropTypes.string\r\n};\r\n\r\nexport default ColorKey;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst SortInfo = ({\r\n  title,\r\n  description,\r\n  worstCase,\r\n  avgCase,\r\n  bestCase,\r\n  space\r\n}) => {\r\n  return (\r\n    <div className=\"SortInfo\">\r\n      <hr />\r\n      <h1>{title ? title : 'Select Algorithm'}</h1>\r\n\r\n      <div className=\"SortInfo__Body\">\r\n        <article className=\"SortInfo__Article\">\r\n          {description ? (\r\n            description\r\n          ) : (\r\n            <p>\r\n              You have not selected any Algorithm for Visualization\r\n              <ul >\r\n              <h4>Follow below Steps to Select Algorithm and Start the Visualizations</h4>\r\n                <li>Select the Algorithm you want to see the Visualization of from the Drop down menu present in the Navbar named as SELECT SORT ALGORITHM</li>\r\n                <li>Select the Size of the array between 5 to 100 from the drop down menu present in the Navbar named as SIZE</li>\r\n                <li>Click on the Randomize button present in the Navbar to randomize the array</li>\r\n                <li>Now, Click the Play Button present below the Bar graph to start the Visualization the specified array</li>\r\n              </ul>\r\n            </p>\r\n          )}\r\n        </article>\r\n\r\n        <aside className=\"SortInfo__Aside\">\r\n          <h3>Performance</h3>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Worst-case space complexity</td>\r\n                <td>\r\n                  <code>{space}</code>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Best-case time complexity</td>\r\n                <td>\r\n                  <code>{bestCase}</code>\r\n                </td>\r\n              </tr>\r\n              \r\n\r\n              <tr>\r\n                <td>Average time complexity</td>\r\n                <td>\r\n                  <code>{avgCase}</code>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>Worst-case time complexity</td>\r\n                <td>\r\n                  <code>{worstCase}</code>\r\n                </td>\r\n              </tr>\r\n              \r\n\r\n            </tbody>\r\n          </table>\r\n        </aside>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSortInfo.propTypes = {\r\n  title: PropTypes.string,\r\n  description: PropTypes.object,\r\n  worstCase: PropTypes.object,\r\n  avgCase: PropTypes.object,\r\n  bestCase: PropTypes.object,\r\n  space: PropTypes.object\r\n};\r\n\r\nexport default SortInfo;\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport SortChart from '../SortChart';\r\nimport VisualizerControls from '../../medium/VisualizerControls';\r\nimport ProgressBar from '../../medium/ProgressBar';\r\nimport ColorKey from '../../medium/ColorKey';\r\nimport SortInfo from '../../medium/SortInfo';\r\n\r\nclass SortVisualizer extends Component {\r\n  state = {\r\n    trace: [],\r\n    traceStep: -1,\r\n\r\n    originalArray: [],\r\n    array: [],\r\n    groupA: [],\r\n    groupB: [],\r\n    groupC: [],\r\n    groupD: [],\r\n    sortedIndices: [],\r\n\r\n    timeoutIds: [],\r\n    playbackSpeed: 1\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.array !== this.props.array) {\r\n      this._reset(this.props.array);\r\n    }\r\n    if (prevProps.trace !== this.props.trace) {\r\n      this.clearTimeouts();\r\n      this.setState({ trace: this.props.trace });\r\n    }\r\n  }\r\n\r\n  // Actions\r\n\r\n  _reset = (array) => {\r\n    this.setState({\r\n      array,\r\n      trace: [],\r\n      traceStep: -1,\r\n      groupA: [],\r\n      groupB: [],\r\n      groupC: [],\r\n      groupD: [],\r\n      sortedIndices: [],\r\n      originalArray: [...array]\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeoutIds.forEach((timeoutId) =>\r\n      clearTimeout(timeoutId)\r\n    );\r\n    this.setState({ timeoutIds: [] });\r\n  };\r\n\r\n  _changeVisualState = (visualState) => {\r\n    this.setState({\r\n      array: visualState.array,\r\n      groupA: visualState.groupA,\r\n      groupB: visualState.groupB,\r\n      groupC: visualState.groupC,\r\n      groupD: visualState.groupD,\r\n      sortedIndices: visualState.sortedIndices\r\n    });\r\n  };\r\n\r\n  run = (trace) => {\r\n    const timeoutIds = [];\r\n    const timer = 250 / this.state.playbackSpeed;\r\n\r\n    // Set a timeout for each item in the trace\r\n    trace.forEach((item, i) => {\r\n      let timeoutId = setTimeout(\r\n        (item) => {\r\n          this.setState(\r\n            (prevState) => ({\r\n              traceStep: prevState.traceStep + 1\r\n            }),\r\n            this._changeVisualState(item)\r\n          );\r\n        },\r\n        i * timer,\r\n        item\r\n      );\r\n\r\n      timeoutIds.push(timeoutId);\r\n    });\r\n\r\n    // Clear timeouts upon completion\r\n    let timeoutId = setTimeout(\r\n      this.clearTimeouts,\r\n      trace.length * timer\r\n    );\r\n    timeoutIds.push(timeoutId);\r\n\r\n    this.setState({ timeoutIds });\r\n  };\r\n\r\n  pause = () => {\r\n    this.clearTimeouts();\r\n  };\r\n\r\n  continue = () => {\r\n    const trace = this.state.trace.slice(this.state.traceStep);\r\n    this.run(trace);\r\n  };\r\n\r\n  stepForward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step < trace.length - 1) {\r\n      const item = trace[step + 1];\r\n      this.setState(\r\n        { traceStep: step + 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  stepBackward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step > 0) {\r\n      const item = trace[step - 1];\r\n      this.setState(\r\n        { traceStep: step - 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  repeat = () => {\r\n    this.clearTimeouts();\r\n    this.setState((prevState) => ({\r\n      array: [...prevState.originalArray],\r\n      traceStep: -1,\r\n      comparing: [],\r\n      compared: [],\r\n      sorted: []\r\n    }));\r\n    this.run(this.state.trace);\r\n  };\r\n\r\n  adjustPlaybackSpeed = (speed) => {\r\n    const playing = this.state.timeoutIds.length > 0;\r\n    this.pause();\r\n    const playbackSpeed = Number(speed.split('x')[0]);\r\n    this.setState({ playbackSpeed }, () => {\r\n      if (playing) this.continue();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SortVisualizer\">\r\n        <SortChart\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n        />\r\n\r\n        <div className=\"SortVisualizer__ProgressBar\">\r\n          <ProgressBar\r\n            width={\r\n              this.state.trace.length > 0\r\n                ? (this.state.traceStep /\r\n                    (this.state.trace.length - 1)) *\r\n                  100\r\n                : 0\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <VisualizerControls\r\n          onPlay={\r\n            this.state.traceStep === -1\r\n              ? this.run.bind(this, this.state.trace)\r\n              : this.continue.bind(this)\r\n          }\r\n          onPause={this.pause.bind(this)}\r\n          onForward={this.stepForward.bind(this)}\r\n          onBackward={this.stepBackward.bind(this)}\r\n          onRepeat={this.repeat.bind(this)}\r\n          onAdjustSpeed={this.adjustPlaybackSpeed}\r\n          playing={this.state.timeoutIds.length > 0}\r\n          playDisabled={\r\n            (this.state.traceStep >= this.state.trace.length - 1 &&\r\n              this.state.traceStep !== -1) ||\r\n            this.state.trace.length <= 0\r\n          }\r\n          forwardDisabled={\r\n            this.state.traceStep >= this.state.trace.length - 1\r\n          }\r\n          backwardDisabled={this.state.traceStep <= 0}\r\n          repeatDisabled={this.state.traceStep <= 0}\r\n          playbackSpeed={this.state.playbackSpeed}\r\n        />\r\n\r\n        <ColorKey {...this.props.colorKey} />\r\n\r\n        <SortInfo {...this.props.desc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortVisualizer;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <section>\r\n        Developed by {' '}\r\n        {/* <span className=\"Footer__Heart\">&hearts;</span> by{' '} */}\r\n        <a\r\n          href=\"https://www.linkedin.com/in/kiranparihar/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"Footer__Link\"\r\n        >\r\n          Kiran Parihar\r\n        </a>\r\n      </section>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const newTrace = (array) => {\r\n  return [\r\n    {\r\n      array: [...array],\r\n      groupA: [],\r\n      groupB: [],\r\n      groupC: [],\r\n      groupD: [],\r\n      sortedIndices: []\r\n    }\r\n  ];\r\n};\r\n\r\nexport const addToTrace = (\r\n  trace,\r\n  array,\r\n  sortedIndices = [],\r\n  groupA = [],\r\n  groupB = [],\r\n  groupC = [],\r\n  groupD = []\r\n) => {\r\n  trace.push({\r\n    array: [...array],\r\n    groupA: [...groupA],\r\n    groupB: [...groupB],\r\n    groupC: [...groupC],\r\n    groupD: [...groupD],\r\n    sortedIndices: [...sortedIndices]\r\n  });\r\n};\r\n\r\nexport const lastSorted = (trace) => {\r\n  return trace[trace.length - 1].sortedIndices;\r\n};\r\n\r\nexport const swap = (array, i, j) => {\r\n  const tmp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = tmp;\r\n};\r\n\r\nexport const createRange = (start, end) => {\r\n  return [...Array(end - start).keys()].map((elem) => elem + start);\r\n};\r\n\r\nexport const createKey = (groupA, groupB, groupC, groupD) => {\r\n  return { groupA, groupB, groupC, groupD };\r\n};\r\n","import React from 'react';\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst BubbleSort = (nums) => {\r\n  // Set up code for tracing the algorithm\r\n  const trace = newTrace(nums);\r\n\r\n  // Sorting Algorithm with trace capture\r\n  for (let i = 0; i < nums.length; i++) {\r\n    for (let j = 0; j < nums.length - i - 1; j++) {\r\n      // Visualize: Comparing A[j] and A[j + 1]\r\n      addToTrace(trace, nums, lastSorted(trace), [j, j + 1]);\r\n      if (nums[j] > nums[j + 1]) {\r\n        swap(nums, j, j + 1);\r\n        // Visualize: Swap A[j] and A[j + 1]\r\n        addToTrace(trace, nums, lastSorted(trace), [], [j, j + 1]);\r\n      }\r\n    }\r\n\r\n    // Visualize: final value is sorted\r\n    addToTrace(trace, nums, [\r\n      ...lastSorted(trace),\r\n      nums.length - 1 - i\r\n    ]);\r\n  }\r\n\r\n  return trace;\r\n};\r\n\r\nexport const BubbleSortKey = createKey('Comparing', 'Swapping');\r\nexport const BubbleSortDesc = {\r\n  title: 'Bubble Sort',\r\n  description: (\r\n    <p>\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Bubble_sort\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Bubble Sort\r\n      </a>{' '}\r\n      is a simple sorting algorithm that repeatedly steps through the\r\n      list, compares adjacent elements and swaps them if they are in the\r\n      wrong order.The pass through the list is repeated until the list\r\n      is sorted. The algorithm, which is a comparison sort, is named for\r\n      the way smaller or larger elements \"bubble\" to the top of the\r\n      list. Although the algorithm is simple, it is too slow and\r\n      impractical for most problems\r\n    </p>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  bestCase: <span>O(n)</span>,\r\n  space: <span>O(1)</span>\r\n};\r\nexport default BubbleSort;\r\n","import React from 'react';\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst SelectionSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  // Core Algorithm\r\n  for (let i = 0; i < nums.length - 1; i++) {\r\n    // Internal Loop: Find index of min value\r\n    let minIndex = i;\r\n    for (let j = i + 1; j < nums.length; j++) {\r\n      // Visualize: comparing A[j] to A[minIndex]\r\n      addToTrace(trace, nums, lastSorted(trace), [minIndex, j]);\r\n      if (nums[j] < nums[minIndex]) {\r\n        // Visualize: discovered new minIndex\r\n        addToTrace(trace, nums, lastSorted(trace), [minIndex], [j]);\r\n        minIndex = j;\r\n        // Visualize: reassign new minIndex;\r\n        addToTrace(trace, nums, lastSorted(trace), [minIndex], [j]);\r\n      }\r\n    }\r\n\r\n    // Visualize: i'th value to be swapped with min value\r\n    addToTrace(trace, nums, lastSorted(trace), [], [i, minIndex]);\r\n\r\n    swap(nums, i, minIndex);\r\n\r\n    // Visualize: i'th value has been swapped with min value\r\n    addToTrace(trace, nums, [...lastSorted(trace), i], [], []);\r\n  }\r\n\r\n  // Visualize: Final item in the array is sorted\r\n  addToTrace(trace, nums, [...lastSorted(trace), nums.length - 1]);\r\n\r\n  return trace;\r\n};\r\n\r\nexport const SelectionSortKey = createKey('Comparing', 'Swapping');\r\n\r\nexport const SelectionSortDesc = {\r\n  title: 'Selection Sort',\r\n  description: (\r\n    <p>\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Selection_sort\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Selection Sort\r\n      </a>{' '}\r\n      is an in-place comparison sorting algorithm that divides the input\r\n      list into two parts: the sublist of items already sorted, which is\r\n      built up from left to right at the front (left) of the list, and\r\n      the sublist of items remaining to be sorted that occupy the rest\r\n      of the list. Initially, the sorted sublist is empty and the\r\n      unsorted sublist is the entire input list. The algorithm proceeds\r\n      by finding the smallest element in the unsorted sublist,\r\n      exchanging (swapping) it with the leftmost unsorted element\r\n      (putting it in sorted order), and moving the sublist boundaries\r\n      one element to the right.\r\n    </p>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  space: <span>O(1)</span>\r\n};\r\n\r\nexport default SelectionSort;\r\n","import React from 'react';\r\nimport { newTrace, addToTrace, createKey } from './helpers';\r\n\r\nconst InsertionSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  // Core Algorithm\r\n  for (let i = 1; i < nums.length; i++) {\r\n    let value = nums[i];\r\n    let hole = i;\r\n    // Visualize: Hole has been selected for comparison\r\n    addToTrace(trace, nums, [], [i]);\r\n    while (hole > 0 && nums[hole - 1] > value) {\r\n      // Visualize: Compare hole to value\r\n      addToTrace(trace, nums, [], [hole], [hole - 1]);\r\n      nums[hole] = nums[hole - 1];\r\n      hole -= 1;\r\n      // Visualize: Overwrite hole with hole - 1\r\n      addToTrace(trace, nums, [], [], [hole, hole + 1]);\r\n    }\r\n    // Visualize: Overwrite hole with value\r\n    addToTrace(trace, nums, [], [], [], [hole]);\r\n    nums[hole] = value;\r\n    // Visualize: value is in sorted position\r\n    addToTrace(trace, nums, [], [], [], [hole]);\r\n  }\r\n\r\n  // Visualize: Mark all elements as sorted\r\n  addToTrace(trace, nums, [...Array(nums.length).keys()]);\r\n  return trace;\r\n};\r\n\r\nexport const InsertionSortKey = createKey(\r\n  'Comparing',\r\n  'Swapping',\r\n  'Overwrite from memory'\r\n);\r\nexport const InsertionSortDesc = {\r\n  title: 'Insertion Sort',\r\n  description: (\r\n    <p>\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Insertion_sort\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Insertion Sort\r\n      </a>{' '}\r\n      is a simple sorting algorithm that iterates through an array and\r\n      at each iteration it removes one element from the array, finds the\r\n      location it belongs to in the sorted list and inserts it there,\r\n      repeating until no elements remain in the unsorted list. It is an\r\n      in-place, stable sorting algorithm that is inefficient on large\r\n      input arrays but works well for data sets that are almost sorted.\r\n      It is more efficient in practice compared to other quadratic\r\n      sorting algorithms like bubble sort and selection sort.\r\n    </p>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  bestCase: <span>O(n)</span>,\r\n  space: <span>O(1)</span>\r\n};\r\n\r\nexport default InsertionSort;\r\n","import React from 'react';\r\nimport { newTrace, addToTrace, createKey } from './helpers';\r\n\r\nconst MergeSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  function merge(original, start, mid, end) {\r\n    const left = original.slice(start, mid);\r\n    const right = original.slice(mid, end);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    while (i < left.length && j < right.length) {\r\n      if (left[i] <= right[j]) {\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n        original[k + start] = left[i];\r\n        i++;\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n      } else {\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n        original[k + start] = right[j];\r\n        j++;\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n      }\r\n      k++;\r\n    }\r\n    while (i < left.length) {\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n      original[k + start] = left[i];\r\n      i++;\r\n      k++;\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n    }\r\n    while (j < right.length) {\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n      original[k + start] = right[j];\r\n      j++;\r\n      k++;\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n    }\r\n\r\n    left.length = 0;\r\n    right.length = 0;\r\n  }\r\n\r\n  function recursiveMergeSort(original, start, end) {\r\n    const length = end - start;\r\n    if (length < 2) {\r\n      // original = []\r\n      if (length < 1) return original;\r\n      // original = [x]\r\n      else return [original[start]];\r\n    }\r\n\r\n    const midPoint = Math.floor((start + end) / 2);\r\n\r\n    // Visualize: First Half\r\n    addToTrace(\r\n      trace,\r\n      original,\r\n      [],\r\n      [...Array(midPoint - start).keys()].map((i) => i + start)\r\n    );\r\n    recursiveMergeSort(original, start, midPoint);\r\n\r\n    // Visualize: Second Half\r\n    addToTrace(\r\n      trace,\r\n      original,\r\n      [],\r\n      [...Array(end - midPoint).keys()].map((i) => i + midPoint)\r\n    );\r\n    recursiveMergeSort(original, midPoint, end);\r\n\r\n    merge(original, start, midPoint, end);\r\n  }\r\n\r\n  recursiveMergeSort(nums, 0, nums.length);\r\n\r\n  // Visualize: Mark all elements as sorted\r\n  addToTrace(trace, nums, [...Array(nums.length).keys()]);\r\n  return trace;\r\n};\r\n\r\nexport const MergeSortKey = createKey(\r\n  'Call Merge Sort',\r\n  null,\r\n  'Overwrite from axillary array'\r\n);\r\nexport const MergeSortDesc = {\r\n  title: 'Merge Sort',\r\n  description: (\r\n    <div>\r\n      <p>\r\n        <a\r\n          href=\"https://en.wikipedia.org/wiki/Merge_sort\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Merge Sort\r\n        </a>{' '}\r\n        is an efficient, stable sorting algorith that makes use of the\r\n        divide and conquer strategy. Conceptually the algorithm works as\r\n        follows:\r\n      </p>\r\n      <ol>\r\n        <li>\r\n          Divide the unsorted list into <em>n</em> sublists, each\r\n          containing one element(a list of one element is considered\r\n          sorted)\r\n        </li>\r\n        <li>\r\n          Repeatedly merge sublists to produce new sorted sublists until\r\n          there is only one sublist remaining. This will be the sorted\r\n          list.\r\n        </li>\r\n      </ol>\r\n    </div>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  space: (\r\n    <span>\r\n      O(<em>n</em>)\r\n    </span>\r\n  )\r\n};\r\nexport default MergeSort;\r\n","import React from 'react';\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createRange,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst QuickSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  function choosePivot(array, start, end) {\r\n    // randomly pick an element between start and end;\r\n    return Math.floor(Math.random() * (end - start)) + start;\r\n  }\r\n\r\n  function partition(array, start, end) {\r\n    let i = start + 1;\r\n    let j = start + 1;\r\n\r\n    // Visualize: Keep pivot marked\r\n    addToTrace(trace, array, lastSorted(trace), [start]);\r\n\r\n    while (j <= end) {\r\n      if (array[j] < array[start]) {\r\n        // Visualize: Mark item that is less than pivot\r\n        addToTrace(\r\n          trace,\r\n          array,\r\n          lastSorted(trace),\r\n          [start],\r\n          [j],\r\n          [],\r\n          createRange(start + 1, i)\r\n        );\r\n\r\n        swap(array, i, j);\r\n\r\n        // Visualize: Move item to lesser list\r\n        addToTrace(\r\n          trace,\r\n          array,\r\n          lastSorted(trace),\r\n          [start],\r\n          [i],\r\n          [],\r\n          createRange(start + 1, i)\r\n        );\r\n        i += 1;\r\n      }\r\n      j += 1;\r\n    }\r\n\r\n    // Visualize: Mark center position\r\n    addToTrace(\r\n      trace,\r\n      array,\r\n      lastSorted(trace),\r\n      [i - 1],\r\n      [],\r\n      [],\r\n      createRange(start, i - 1)\r\n    );\r\n    swap(array, start, i - 1);\r\n\r\n    // Visualize: Move pivot to center\r\n    addToTrace(\r\n      trace,\r\n      array,\r\n      lastSorted(trace),\r\n      [i - 1],\r\n      [],\r\n      [],\r\n      createRange(start, i - 1)\r\n    );\r\n    return i - 1;\r\n  }\r\n\r\n  function recursiveQuickSort(array, start, end) {\r\n    if (start >= end) {\r\n      if (start === end) {\r\n        // Visualize: Mark only item as sorted\r\n        addToTrace(trace, array, [...lastSorted(trace), start]);\r\n      }\r\n      return null;\r\n    }\r\n\r\n    let pivot = choosePivot(array, start, end);\r\n\r\n    // Visualize: Mark chosen pivot\r\n    addToTrace(trace, array, lastSorted(trace), [pivot]);\r\n\r\n    swap(array, start, pivot);\r\n\r\n    // Visualize: Move chosen pivot to start\r\n    addToTrace(trace, array, lastSorted(trace), [pivot]);\r\n\r\n    pivot = partition(array, start, end);\r\n\r\n    // Visualize: Mark pivot after partition as sorted\r\n    addToTrace(trace, array, [...lastSorted(trace), pivot]);\r\n\r\n    recursiveQuickSort(array, start, pivot - 1);\r\n    recursiveQuickSort(array, pivot + 1, end);\r\n  }\r\n\r\n  recursiveQuickSort(nums, 0, nums.length - 1);\r\n\r\n  return trace;\r\n};\r\n\r\nexport const QuickSortKey = createKey(\r\n  'Comparing',\r\n  'Swapping',\r\n  null,\r\n  'Less than pivot'\r\n);\r\n\r\nexport const QuickSortDesc = {\r\n  title: 'Quick Sort',\r\n  description: (\r\n    <div>\r\n      <p>\r\n        <a\r\n          href=\"https://en.wikipedia.org/wiki/Quicksort\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Quick Sort\r\n        </a>{' '}\r\n        is an efficient, in-place sorting algorith that in practice is\r\n        faster than MergeSort and HeapSort. However, it is not a stable\r\n        sorting algorithm, meaning that the relative positioning of\r\n        equal sort items is not preserved.Quicksort is a divide and\r\n        conquer algorithm. Quicksort first divides a large array into\r\n        two smaller sub-arrays: the low elements and the high elements.\r\n        Quicksort can then recursively sort the sub-arrays. The steps\r\n        are:\r\n      </p>\r\n      <ol>\r\n        <li>\r\n          Pick an element, called a pivot, from the array. This is\r\n          usually done at random.\r\n        </li>\r\n        <li>Move pivot element to the start of the array.</li>\r\n        <li>\r\n          <em>Partitioning:</em> reorder the array so that all elements\r\n          with values less than the pivot come before the pivot, while\r\n          all elements with values greater than the pivot come after it\r\n          (equal values can go either way). After this partitioning, the\r\n          pivot is in its final position. This is called the{' '}\r\n          <em>partition</em> operation.\r\n        </li>\r\n        <li>\r\n          Recursively apply the above steps to the sub-array of elements\r\n          with smaller values and separately to the sub-array of\r\n          elements with greater values.\r\n        </li>\r\n      </ol>\r\n      <p>\r\n        The base case of the recursion is an array of size zero or one,\r\n        which are sorted by definition.\r\n      </p>\r\n    </div>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(<em>n</em>\r\n      <sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(<em>n</em>log<em>n</em>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(<em>n</em>log<em>n</em>)\r\n    </span>\r\n  ),\r\n  space: (\r\n    <span>\r\n      O(log<em>n</em>)\r\n    </span>\r\n  )\r\n};\r\n\r\nexport default QuickSort;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nimport AppControls from './components/medium/AppControls';\r\nimport TopBar from './components/organisms/TopBar';\r\nimport AppDrawer from './components/organisms/AppDrawer';\r\nimport SortVisualizer from './components/organisms/SortVisualizer';\r\nimport Footer from './components/medium/Footer';\r\n\r\nimport BubbleSort, {\r\n  BubbleSortKey,\r\n  BubbleSortDesc\r\n} from './algorithms/BubbleSort';\r\nimport SelectionSort, {\r\n  SelectionSortKey,\r\n  SelectionSortDesc\r\n} from './algorithms/SelectionSort';\r\nimport InsertionSort, {\r\n  InsertionSortKey,\r\n  InsertionSortDesc\r\n} from './algorithms/InsertionSort';\r\nimport MergeSort, {\r\n  MergeSortKey,\r\n  MergeSortDesc\r\n} from './algorithms/MergeSort';\r\nimport QuickSort, {\r\n  QuickSortKey,\r\n  QuickSortDesc\r\n} from './algorithms/QuickSort';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    array: [],\r\n    arraySize: 10,\r\n    trace: [],\r\n    algorithm: null,\r\n    appDrawerOpen: false\r\n  };\r\n\r\n  ALGORITHM = {\r\n    'Bubble Sort': BubbleSort,\r\n    'Selection Sort': SelectionSort,\r\n    'Insertion Sort': InsertionSort,\r\n    'Merge Sort': MergeSort,\r\n    'Quick Sort': QuickSort,\r\n    \r\n  };\r\n\r\n  ALGORITHM_KEY = {\r\n    'Bubble Sort': BubbleSortKey,\r\n    'Selection Sort': SelectionSortKey,\r\n    'Insertion Sort': InsertionSortKey,\r\n    'Merge Sort': MergeSortKey,\r\n    'Quick Sort': QuickSortKey,\r\n    \r\n  };\r\n\r\n  ALGORITHM_DESC = {\r\n    'Bubble Sort': BubbleSortDesc,\r\n    'Selection Sort': SelectionSortDesc,\r\n    'Insertion Sort': InsertionSortDesc,\r\n    'Merge Sort': MergeSortDesc,\r\n    'Quick Sort': QuickSortDesc,\r\n   \r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateRandomArray();\r\n  }\r\n\r\n  generateRandomArray = () => {\r\n    // Generate pseudo-random number between 1 and max\r\n    function getRandomInt(max) {\r\n      return Math.floor(Math.random() * Math.floor(max)) + 1;\r\n    }\r\n\r\n    // Generate an array of length max\r\n    const array = Array(this.state.arraySize)\r\n      .fill(0)\r\n      .map(() => getRandomInt(this.state.arraySize * 5));\r\n\r\n    this.setState(\r\n      {\r\n        array,\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  };\r\n\r\n  handleAlgorithmChange = (algorithm) => {\r\n    this.setState({ algorithm }, this.generateRandomArray);\r\n  };\r\n\r\n  handleArraySizeChange = (size) => {\r\n    size = Number(size);\r\n    size = size > 100 ? 100 : size;\r\n    size = size < 0 ? 0 : size;\r\n    this.setState({ arraySize: size }, this.generateRandomArray);\r\n  };\r\n\r\n  createTrace = () => {\r\n    const numbers = [...this.state.array];\r\n    const sort = this.ALGORITHM[this.state.algorithm];\r\n    if (sort) {\r\n      const trace = sort(numbers);\r\n      this.setState({ trace });\r\n    }\r\n  };\r\n\r\n  toggleAppDrawer = () => {\r\n    this.setState((prevState) => ({\r\n      appDrawerOpen: !prevState.appDrawerOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let theme = `App`;\r\n    if (this.state.appDrawerOpen) theme += ` App_modal_open`;\r\n\r\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\r\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\r\n\r\n    const controls = (\r\n      <AppControls\r\n        onGenerateRandomArray={this.generateRandomArray}\r\n        algorithm={this.state.algorithm}\r\n        onAlgorithmChange={this.handleAlgorithmChange}\r\n        arraySize={this.state.arraySize}\r\n        onArraySizeChange={this.handleArraySizeChange}\r\n        \r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={theme}>\r\n        <TopBar\r\n          drawerOpen={this.state.appDrawerOpen}\r\n          toggleDrawer={this.toggleAppDrawer}\r\n        >\r\n          {controls}\r\n        </TopBar>\r\n\r\n        <AppDrawer\r\n          open={this.state.appDrawerOpen}\r\n          closeDrawer={this.toggleAppDrawer}\r\n        >\r\n          {controls}\r\n        </AppDrawer>\r\n\r\n        <main className=\"App__Body\">\r\n          <SortVisualizer\r\n            array={this.state.array}\r\n            trace={this.state.trace}\r\n            colorKey={colorKey}\r\n            desc={desc}\r\n          />\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}