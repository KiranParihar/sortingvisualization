{"ast":null,"code":"var _jsxFileName = \"D:\\\\sa\\\\sort-visualizer\\\\src\\\\components\\\\medium\\\\AppControls\\\\index.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Button from '../../small/Button';\nimport Switch from '../../small/Switch';\nimport Menu from '../Menu';\n\nconst AppControls = ({\n  algorithm,\n  onAlgorithmChange,\n  onGenerateRandomArray,\n  arraySize,\n  onArraySizeChange\n}) => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    placeholder: \"Select Sort Algorithm\",\n    items: ['Bubble Sort', 'Selection Sort', 'Insertion Sort', 'Merge Sort', 'Quick Sort'],\n    selected: algorithm,\n    onSelect: onAlgorithmChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AppControls__Size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(Menu, {\n    placeholder: \"Array Size\",\n    items: ['5', '10', '25', '50', '75', '100'],\n    selected: String(arraySize),\n    onSelect: onArraySizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: onGenerateRandomArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Randomize\"));\n};\n\nAppControls.propTypes = {\n  algorithm: PropTypes.string,\n  onAlgorithmChange: PropTypes.func.isRequired,\n  onGenerateRandomArray: PropTypes.func.isRequired,\n  arraySize: PropTypes.number,\n  onArraySizeChange: PropTypes.func.isRequired\n};\nexport default AppControls;","map":{"version":3,"sources":["D:/sa/sort-visualizer/src/components/medium/AppControls/index.js"],"names":["React","Fragment","PropTypes","Button","Switch","Menu","AppControls","algorithm","onAlgorithmChange","onGenerateRandomArray","arraySize","onArraySizeChange","String","propTypes","string","func","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,SADmB;AAEnBC,EAAAA,iBAFmB;AAGnBC,EAAAA,qBAHmB;AAInBC,EAAAA,SAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMd;AACJ,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,WAAW,EAAC,uBADd;AAEE,IAAA,KAAK,EAAE,CACL,aADK,EAEL,gBAFK,EAGL,gBAHK,EAIL,YAJK,EAKL,YALK,CAFT;AASE,IAAA,QAAQ,EAAEJ,SATZ;AAUE,IAAA,QAAQ,EAAEC,iBAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAcE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,KAA9B,CAFT;AAGE,IAAA,QAAQ,EAAEI,MAAM,CAACF,SAAD,CAHlB;AAIE,IAAA,QAAQ,EAAEC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,eAwBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxBF,CADF;AAkCD,CAzCD;;AA2CAH,WAAW,CAACO,SAAZ,GAAwB;AACtBN,EAAAA,SAAS,EAAEL,SAAS,CAACY,MADC;AAEtBN,EAAAA,iBAAiB,EAAEN,SAAS,CAACa,IAAV,CAAeC,UAFZ;AAGtBP,EAAAA,qBAAqB,EAAEP,SAAS,CAACa,IAAV,CAAeC,UAHhB;AAItBN,EAAAA,SAAS,EAAER,SAAS,CAACe,MAJC;AAKtBN,EAAAA,iBAAiB,EAAET,SAAS,CAACa,IAAV,CAAeC;AALZ,CAAxB;AAQA,eAAeV,WAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Button from '../../small/Button';\r\nimport Switch from '../../small/Switch';\r\nimport Menu from '../Menu';\r\n\r\nconst AppControls = ({\r\n  algorithm,\r\n  onAlgorithmChange,\r\n  onGenerateRandomArray,\r\n  arraySize,\r\n  onArraySizeChange\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Menu\r\n        placeholder=\"Select Sort Algorithm\"\r\n        items={[\r\n          'Bubble Sort',\r\n          'Selection Sort',\r\n          'Insertion Sort',\r\n          'Merge Sort',\r\n          'Quick Sort'\r\n        ]}\r\n        selected={algorithm}\r\n        onSelect={onAlgorithmChange}\r\n      />\r\n\r\n      <div className=\"AppControls__Size\">\r\n        <span>Size</span>\r\n        <Menu\r\n          placeholder=\"Array Size\"\r\n          items={['5', '10', '25', '50', '75', '100']}\r\n          selected={String(arraySize)}\r\n          onSelect={onArraySizeChange}\r\n        />\r\n      </div>\r\n\r\n      <Button onClick={onGenerateRandomArray}>Randomize</Button>\r\n\r\n      {/* <Switch\r\n        label=\"Dark Mode\"\r\n        onSwitch={onToggleDarkMode}\r\n        checked={darkMode}\r\n      /> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAppControls.propTypes = {\r\n  algorithm: PropTypes.string,\r\n  onAlgorithmChange: PropTypes.func.isRequired,\r\n  onGenerateRandomArray: PropTypes.func.isRequired,\r\n  arraySize: PropTypes.number,\r\n  onArraySizeChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AppControls;\r\n"]},"metadata":{},"sourceType":"module"}